plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot starters
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'  // ← ADD THIS for health checks
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.ws:spring-ws-core'

    // Development tools
    compileOnly 'org.projectlombok:lombok:1.18.42'
    annotationProcessor 'org.projectlombok:lombok:1.18.42'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

    // Flyway for database migrations
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'

    // MySQL driver for production
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Testing dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2'  // ← ADD THIS for test database
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Uncomment if security needed
    // implementation 'org.springframework.boot:spring-boot-starter-security'

    // Uncomment if JWT needed
    // implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    // runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    // runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
}

tasks.named('test') {
    useJUnitPlatform()

    // Set test system properties for better test isolation
    systemProperty 'spring.profiles.active', 'test'
}

// Optional: Configure bootJar task
tasks.named('bootJar') {
    archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
}