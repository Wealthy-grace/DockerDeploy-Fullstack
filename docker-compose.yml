#
#version: '3'
#services:
#  backend:
#    build:
#      context: ./backend # Path to your backend Dockerfile directory.
#      dockerfile: Dockerfile # Dockerfile name if different.
#    ports:
#      - "8080:8080"
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:mysql://db/bconnect?useSSL=false&serverTimezone=UTC
#      SPRING_DATASOURCE_USERNAME: root
#      SPRING_DATASOURCE_PASSWORD: Server123@
#
#  frontend:
#    build:
#      context: ./frontend # Path to your frontend Dockerfile directory.
#      dockerfile: Dockerfile # Dockerfile name if different.
#    ports:
#      - "4200:80"
#
#  db:
#    image: mysql:8
#    environment:
#      MYSQL_ROOT_PASSWORD: Server123@
#      MYSQL_DATABASE: bconnect
#    volumes:
#      - mysql-data:/var/lib/mysql
#
#volumes:
#  mysql-data:


version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_DATABASE: blog
      MYSQL_ROOT_PASSWORD: Server123@
    ports:
      - '3316:3306' # Host port:Container port
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - springboot-mysql
    restart: unless-stopped  # Ensure MySQL container restarts if it fails

  app:
    build:
      context: ../..  # Adjust to the correct context if needed
      dockerfile: Dockerfile
    container_name: springboot
    ports:
      - '8090:8080'  # Host port:Container port
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/blog
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: Server123@
    depends_on:
      - mysql  # Waits for MySQL to be ready
    networks:
      - springboot-mysql
    volumes:
      - app-data:/app/uploads
    restart: unless-stopped  # Ensure Spring Boot container restarts if it fails

volumes:
  mysql-data:
  app-data:

networks:
  springboot-mysql:
    driver: bridge
